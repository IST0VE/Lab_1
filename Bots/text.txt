# Обработчик нажатия на кнопку
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    user_id = call.message.text.split()[4]  # Получаем id пользователя из сообщения
    field = call.data  # Получаем название поля, которое нужно изменить

    if field == 'all':
        # Если пользователь выбрал "Изменить все", выводим соответствующее сообщение
        bot.send_message(call.message.chat.id, 'Отправь мне новые данные через одно сообщение в формате "Имя Фамилия, email, телефон"')
    else:
        # Если пользователь выбрал изменить конкретное поле, выводим соответствующее сообщение
        bot.send_message(call.message.chat.id, f'Отправь мне новое значение для поля "{field}"')

    # Регистрируем следующий обработчик
    bot.register_next_step_handler(call.message, lambda message: update_record(message, user_id, field))

# Обработчик сообщения с новыми данными пользователя
def update_record(message, user_id, field):
    new_value = message.text.strip()
    update_query = ''

    # Проверяем, существует ли пользователь с заданным id в базе данных
    select_query = "SELECT * FROM records WHERE id=%s"
    cursor.execute(select_query, (user_id,))
    result = cursor.fetchone()

    if not result:
        # Если пользователь не найден, выводим сообщение об ошибке
        bot.send_message(message.chat.id, 'Пользователь с таким id не найден в базе данных')
        return

    if field == 'name':
        # Изменяем имя пользователя
        update_query = "UPDATE records SET name=%s WHERE id=%s"
    elif field == 'email':
        # Изменяем email пользователя
        update_query = "UPDATE records SET email=%s WHERE id=%s"
    elif field == 'phone':
        # Изменяем телефон пользователя
        update_query = "UPDATE records SET phone=%s WHERE id=%s"
    elif field == 'all':
        # Изменяем все поля пользователя
        new_values = new_value.split(',')
        if len(new_values) != 3:
            # Если количество полей не равно 3, выводим сообщение об ошибке
            bot.send_message(message.chat.id, 'Неверный формат данных. Попробуй еще раз.')
            return
        name, email, phone = [value.strip() for value in new_values]
        update_query = "UPDATE records SET name=%s, email=%s, phone=%s WHERE id=%s"

    # Обновляем данные пользователя в базе данных
    try:
        if field == 'name':
            cursor.execute(update_query, (new_value, user_id))
        elif field == 'email':
            cursor.execute(update_query, (new_value, user_id))
        elif field == 'phone':
            cursor.execute(update_query, (new_value, user_id))
        elif field == 'all':
            cursor.execute(update_query, (name, email, phone, user_id))
        cnx.commit()
        bot.send_message(message.chat.id, 'Запись успешно изменена!')
    except mysql.connector.Error as error:
        print("Ошибка при обновлении записи: {}".format(error))
        cnx.rollback()
        bot.send_message(message.chat.id, 'Произошла ошибка при изменении записи. Попробуйте еще раз.')

bot.polling(none_stop=True)
 